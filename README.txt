
   https://spb.hh.ru/vacancy/78542200?from=vacancy
   Backend программист Python / Python Backend Developer
    от 50 000 руб. до вычета налогов

    Напишите скрипт, асинхронно, в 3 одновременных задачи, скачивающий содержимое HEAD репозитория
    https://gitea.radium.group/radium/project-configuration
    во временную папку.
    После выполнения всех асинхронных задач скрипт должен посчитать sha256 хэши от каждого файла.
    Код должен проходить без замечаний проверку линтером wemake-python-styleguide. Конфигурация nitpick - https://gitea.radium.group/radium/project-configuration
    Обязательно 100% покрытие тестами
    При выполнении в ChatGPT - обязательна переработка
    - "Напишите скрипт, асинхронно, в 3 одновременных задачи, скачивающий содержимое HEAD репозитория" можно понять как-будто три задачи отдельные, сами по себе, а скачивание и хеширование, само по себе, а можно понять, что это и есть эти три задачи. Я понял по 1 варианту, так интереснее.
    - Что находим в хед-папке важно? То есть еще подзадача хед-папку, как капусту на файлы разобрать.

    1. Разворачиваем Джанго, селери, редис, кронтаб. Ззапуск с консоли, с коммандного файла, с админки и возможно вообще с темплейта, но замороченнее?
    2. В тасках прописываем задачи, периодичность выполнения при запуске + условие о запуске 4ой после 3ех ассинхронных.
    3. Сами задачи (4ая таска):
        1. Создаем директорий:
        2. Клонируем папку,
        3. Хешируем файлы поочереди и можем принтить в консоли, что-то подтверждающее.
        4. Предусмотреть возможность удаления созданной папки

   а) клонируем и разорачиваем проект у себя, создаем суперюзера, вся работа из админки: добавляем 4 таски, поминутно, например, и получаем файл резулт1.ткст

   б) можно запустить коммандный файл users/management/commands/stage_completed.py так сработает клонирование и хэшироавние, но история про ассинхронные три задачи забыта. Зписюлька в сеттингз на 53-55 строчках не сработала.

   в) записюлька на строчках 46-51 сеттингз сработала, создаем суперпольователя (python3 manage.py createsuperuser) получаем сразу все удовольствия, работать через админку + 2 команды в консоли: 1. celery -A config worker -l INFO 2.celery -A config beat -l info -S django


